version: 2
template:
  name: "SCC - Tekton Toolchain"
  description: "Test the SCC Tekton task"
  required:
    - terraform-template
    - scc-tekton-playground
  info:
    # original static git url and branch string definitions
    # git url: >-
    #   [https://github.com/cloud-native-toolkit/toolchain-terraform-cra](https://github.com/cloud-native-toolkit/toolchain-terraform-cra)
    # git branch: >-
    #   [master](https://github.com/cloud-native-toolkit/toolchain-terraform-cra/tree/master)

    #  compute the git url and branch values dynamically so that they remain correct when repo is forked etc.
    #  note: `repository` url param must always be provided while the `branch` url param is optional
    #  the computed urls are of the same format as the original static urls shown above
    git url: >
      '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
      $env.branch ?
        '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
        '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: "scc-tekton-playground-{{timestamp}}"
services:
   scc-tekton-playground:
     service_id: githubconsolidated
     parameters:
       repo_name: "scc-tekton-playground"
       repo_url: "https://github.com/triceam/scc-tekton-playground"
       source_repo_url: "https://github.com/triceam/scc-tekton-playground"
       type: "link"
       has_issues: false
       enable_traceability: false
       legal: true
       kind: ["pipeline"]
   scc-tekton-pipeline:
     parameters:
       label: scc-tekton-pipeline
       type: tekton
       name: "scc-tekton-pipeline"
       ui_pipeline: true
       configuration:
         env:
           scc-tekton-playground: scc-tekton-playground
           API_KEY: "{{form.pipeline.parameters.api-key}}"
           REPOSITORY: '{{services.scc-tekton-playground.parameters.repo_url}}'
         content:
           $text: pipeline.yml
       services:
         - scc-tekton-playground
     service_id: "pipeline"
form:
  pipeline:
    parameters:
      api-key: "{{apiKey}}"
    schema:
      $ref: deploy.json
